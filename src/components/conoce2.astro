---
import '../styles/conoce2.css'
import {Image} from 'astro:assets';
import ConoceI1 from '../assets/conoce1.webp';
import ConoceI2 from '../assets/conoce2.webp';
import ConoceI3 from '../assets/conoce3.webp';
import ConoceI4 from '../assets/conoce4.webp';
---

<section class="conoce2">
    <div class="conoce-cont2">

        <div class="conoce-texto2">
            <h4>
                CONOCE PLANKTON WALLET
            </h4>

            <h1>
                Maximiza tu experiencia financiera <br> con nuestra suite de <br>servicios avanzados
            </h1>
        </div>

        <div class="conoce-grid2">

            <div class="conoce1-img2">
                <Image src={ConoceI1} alt="Plankton-Logo" class="conoce1-img2" 
                />
                <div class="conoce1-txt2">Gesti√≥n<br> Inteligente</div>
            </div>

            <div class="conoce2-img2">
                <Image src={ConoceI2} alt="Plankton-Logo" class="conoce2-img2" 
                />
                <div class="conoce2-txt2">Pagos Integrados</div>
            </div>

            <div class="conoce3-img2">
                <Image src={ConoceI3} alt="Plankton-Logo" class="conoce3-img2" 
                />
                <div class="conoce3-txt2">Desarrollo de <br>Wallets</div>
            </div>

            <div class="conoce4-img2">
                <Image src={ConoceI4} alt="Plankton-Logo" class="conoce4-img2" 
                />
                <div class="conoce4-txt2">KYC/KYB <br> Avanzados</div>
            </div>
            
        </div>

    </div>
</section>

<script>
    document.addEventListener('DOMContentLoaded', () => {
  const comnoceanimacion12 = document.querySelector('.conoce-texto2');
  const comnoceanimacion22 = document.querySelector('.conoce-grid2');
  const comnoceanimacion32 = document.querySelector('.conoce-button2');

  // Observadores separados
  const observer12 = new IntersectionObserver(
    (entries) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          setTimeout(() => {
            comnoceanimacion12.classList.add('visible');
          }, 400); // Retraso de 1 segundo
          observer12.unobserve(comnoceanimacion12);
        }
      });
    },
    { threshold: 0.1 }
  );

  const observer22 = new IntersectionObserver(
    (entries) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          setTimeout(() => {
            comnoceanimacion22.classList.add('visible');
          }, 600); // Retraso de 2 segundos
          observer22.unobserve(comnoceanimacion22);
        }
      });
    },
    { threshold: 0.1 }
  );

  const observer32 = new IntersectionObserver(
    (entries) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          setTimeout(() => {
            comnoceanimacion32.classList.add('visible');
          }, 800); // Retraso de 2 segundos
          observer32.unobserve(comnoceanimacion32);
        }
      });
    },
    { threshold: 0.1 }
  );


  observer12.observe(comnoceanimacion12);
  observer22.observe(comnoceanimacion22);
  observer32.observe(comnoceanimacion32);

});
</script>